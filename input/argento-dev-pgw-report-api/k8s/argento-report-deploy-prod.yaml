apiVersion: apps/v1
kind: Deployment
metadata:
  name: report
  namespace: ${NAMESPACE_K8S}
spec:
  replicas: 2
  selector:
    matchLabels:
      component: report
  template:
    metadata:
      labels:
        component: report
    spec:
      containers:
        - name: report
          image: harbor.argentotech.co/api/${IMG_NAME}:${APP_VERSION}
          imagePullPolicy: IfNotPresent
          env:
            - name: ASPNETCORE_ENVIRONMENT
              value: "Production"
            - name: IdentityUrl
              valueFrom:
                configMapKeyRef:
                  name: internalurls
                  key: identity
          resources:
            requests: 
              memory: "200Mi"
              cpu: "250m"
            limits:
              cpu: 2048m
              memory: 2Gi
          volumeMounts:
#          - name: argento-report-v
#            mountPath: /app/appsettings.json
#            subPath: appsettings.json
          - name: tz-config
            mountPath: /etc/localtime
      volumes:
#      - name: argento-report-v
#        configMap:
#          name: argento-report-config
      - name: tz-config
        hostPath:
          path: /usr/share/zoneinfo/Asia/Bangkok
          type:
---
apiVersion: v1
kind: Service
metadata:
  name: report-svc
  namespace: ${NAMESPACE_K8S}
spec:
  type: NodePort
  selector:
    component: report
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
      nodePort: 30125
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: report-ing
  namespace: ${NAMESPACE_K8S}
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/limit-rate: "3145728" # 3 MB in bytes
    nginx.ingress.kubernetes.io/limit-rate-after: "5242880" # 5 MB in bytes
    # nginx.ingress.kubernetes.io/keep-alive: "64"  # number of idle keep-alive connections
    # nginx.ingress.kubernetes.io/keep-alive-timeout: "10m"  # time the server waits before closing the connection
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600" # time to read the first byte from the upstream
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600" # time for the client to send a request to the server
spec:
  rules:
  - host: "report-prod-directbiller.argentotech.co"
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: report-svc
            port:
              number: 80
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: reporting-daily-cronjob
  namespace: ${NAMESPACE_K8S}
spec:
  schedule: "10 7 * * *"  #  07.10AM from every day
  concurrencyPolicy: Replace # Replace existing job if it's still running
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: curl-container
            image: curlimages/curl:latest
            command:
            - /bin/sh
            - -c
            - >
              curl -X GET 
              'http://report-svc.prod/api/v1/auto-transaction/auto-sending-transaction-report/accounting?StartDate=&EndDate='
              -H 'accept: */*';
          restartPolicy: OnFailure